/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedSearchRouteImport } from './routes/_authenticated/search'
import { Route as AuthenticatedArtistsIdRouteImport } from './routes/_authenticated/artists/$id'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSearchRoute = AuthenticatedSearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedArtistsIdRoute = AuthenticatedArtistsIdRouteImport.update({
  id: '/artists/$id',
  path: '/artists/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/search': typeof AuthenticatedSearchRoute
  '/artists/$id': typeof AuthenticatedArtistsIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/search': typeof AuthenticatedSearchRoute
  '/artists/$id': typeof AuthenticatedArtistsIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/search': typeof AuthenticatedSearchRoute
  '/_authenticated/artists/$id': typeof AuthenticatedArtistsIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/search' | '/artists/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/search' | '/artists/$id'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/search'
    | '/_authenticated/artists/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/search': {
      id: '/_authenticated/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AuthenticatedSearchRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/artists/$id': {
      id: '/_authenticated/artists/$id'
      path: '/artists/$id'
      fullPath: '/artists/$id'
      preLoaderRoute: typeof AuthenticatedArtistsIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedSearchRoute: typeof AuthenticatedSearchRoute
  AuthenticatedArtistsIdRoute: typeof AuthenticatedArtistsIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedSearchRoute: AuthenticatedSearchRoute,
  AuthenticatedArtistsIdRoute: AuthenticatedArtistsIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
